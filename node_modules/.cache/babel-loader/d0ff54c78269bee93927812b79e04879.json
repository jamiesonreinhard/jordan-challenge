{"ast":null,"code":"var _jsxFileName = \"/home/jordo/jordan-challenge/src/components/Nav.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../styles/navigation.css';\nimport zoee from '../assets/images/logos.svg';\nimport notifications from '../assets/images/notifications.svg';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nav = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  //I used a page state to keep track of what page we're on and gave a name prop to each link to know what name each link represents\n  //Then, StyledComponents looks at the prop to determine if the current page and name of each link match, changing the style based\n  //on that result! However, this will cause a refresh on the page to not display the proper link in bold since it is based on a prop.\n  //A proper solution would utilize information from the React Router to always determine the current page, which I would need more time\n  // to properly implement.\n  const [page, setPage] = useState('Home');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: zoee,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-items\",\n        children: [/*#__PURE__*/_jsxDEV(StyledLink, {\n          to: \"/\",\n          onClick: () => setPage('Home'),\n          page: page,\n          name: 'Home',\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n          to: \"/contacts\",\n          onClick: () => setPage('Contacts'),\n          page: page,\n          name: 'Contacts',\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: notifications,\n          alt: \"notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), user.first_name && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.first_name[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Nav, \"UcNJrgNNBjxHoCMVeFnbqTmHR3E=\");\n\n_c = Nav;\nexport default Nav;\nconst StyledLink = styled(Link)`\n    font-weight: ${_ref2 => {\n  let {\n    page,\n    name\n  } = _ref2;\n  return page === name ? 'bold' : 'normal';\n}};\n    color: ${_ref3 => {\n  let {\n    page,\n    name\n  } = _ref3;\n  return page === name ? '#000 !important' : '#7D878F !important';\n}};\n`;\n_c2 = StyledLink;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Nav\");\n$RefreshReg$(_c2, \"StyledLink\");","map":{"version":3,"names":["React","useEffect","useState","zoee","notifications","Link","styled","Nav","user","page","setPage","first_name","StyledLink","name"],"sources":["/home/jordo/jordan-challenge/src/components/Nav.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport '../styles/navigation.css';\nimport zoee from '../assets/images/logos.svg';\nimport notifications from '../assets/images/notifications.svg';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\n\n\nconst Nav = ({user}) => {\n    //I used a page state to keep track of what page we're on and gave a name prop to each link to know what name each link represents\n    //Then, StyledComponents looks at the prop to determine if the current page and name of each link match, changing the style based\n    //on that result! However, this will cause a refresh on the page to not display the proper link in bold since it is based on a prop.\n    //A proper solution would utilize information from the React Router to always determine the current page, which I would need more time\n    // to properly implement.\n\n    const [page, setPage] = useState('Home');\n\n    return(\n        <div className='nav-bar'>\n            <div className=\"nav-inner\">\n                <img src={zoee} alt=\"\" />\n                <div className=\"nav-items\">\n                    <StyledLink to=\"/\" onClick={() => setPage('Home')} page={page} name={'Home'}>Home</StyledLink>\n                    <StyledLink to=\"/contacts\" onClick={() => setPage('Contacts')} page={page} name={'Contacts'}>Contacts</StyledLink>\n                </div>\n                <div className='nav-right'>\n                    <img src={notifications} alt=\"notifications\" />\n                    {user.first_name && <h1>{user.first_name[0]}</h1>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Nav;\n\nconst StyledLink = styled(Link)`\n    font-weight: ${({page, name}) => page === name ? 'bold' : 'normal'};\n    color: ${({page, name}) => page === name ? '#000 !important' : '#7D878F !important'};\n`;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,0BAAP;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAKA,MAAMC,GAAG,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EACpB;EACA;EACA;EACA;EACA;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,MAAD,CAAhC;EAEA,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,uBACI;MAAK,SAAS,EAAC,WAAf;MAAA,wBACI;QAAK,GAAG,EAAEC,IAAV;QAAgB,GAAG,EAAC;MAApB;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,WAAf;QAAA,wBACI,QAAC,UAAD;UAAY,EAAE,EAAC,GAAf;UAAmB,OAAO,EAAE,MAAMO,OAAO,CAAC,MAAD,CAAzC;UAAmD,IAAI,EAAED,IAAzD;UAA+D,IAAI,EAAE,MAArE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,UAAD;UAAY,EAAE,EAAC,WAAf;UAA2B,OAAO,EAAE,MAAMC,OAAO,CAAC,UAAD,CAAjD;UAA+D,IAAI,EAAED,IAArE;UAA2E,IAAI,EAAE,UAAjF;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAMI;QAAK,SAAS,EAAC,WAAf;QAAA,wBACI;UAAK,GAAG,EAAEL,aAAV;UAAyB,GAAG,EAAC;QAA7B;UAAA;UAAA;UAAA;QAAA,QADJ,EAEKI,IAAI,CAACG,UAAL,iBAAmB;UAAA,UAAKH,IAAI,CAACG,UAAL,CAAgB,CAAhB;QAAL;UAAA;UAAA;UAAA;QAAA,QAFxB;MAAA;QAAA;QAAA;QAAA;MAAA,QANJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CAxBD;;GAAMJ,G;;KAAAA,G;AA0BN,eAAeA,GAAf;AAEA,MAAMK,UAAU,GAAGN,MAAM,CAACD,IAAD,CAAO;AAChC,mBAAmB;EAAA,IAAC;IAACI,IAAD;IAAOI;EAAP,CAAD;EAAA,OAAkBJ,IAAI,KAAKI,IAAT,GAAgB,MAAhB,GAAyB,QAA3C;AAAA,CAAoD;AACvE,aAAa;EAAA,IAAC;IAACJ,IAAD;IAAOI;EAAP,CAAD;EAAA,OAAkBJ,IAAI,KAAKI,IAAT,GAAgB,iBAAhB,GAAoC,oBAAtD;AAAA,CAA2E;AACxF,CAHA;MAAMD,U"},"metadata":{},"sourceType":"module"}