{"ast":null,"code":"var _jsxFileName = \"/home/jordo/jordan-challenge/src/components/Contacts.jsx\";\nimport React from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = _ref => {\n  let {\n    contacts\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: contacts.length && contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: contact.first_name + ' ' + contact.last_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this)\n    }, contact.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","Contacts","contacts","length","map","contact","first_name","last_name","id"],"sources":["/home/jordo/jordan-challenge/src/components/Contacts.jsx"],"sourcesContent":["import React from 'react';\nimport '../App.css'\n\nconst Contacts = ({contacts}) => {\n\n    return (\n        <div className=\"container\">\n            {contacts.length && contacts.map((contact) => (\n                <div key={contact.id}>\n                    <h3>{contact.first_name + ' ' + contact.last_name}</h3>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Contacts;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;;AAEA,MAAMC,QAAQ,GAAG,QAAgB;EAAA,IAAf;IAACC;EAAD,CAAe;EAE7B,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,UACKA,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACE,GAAT,CAAcC,OAAD,iBAC7B;MAAA,uBACI;QAAA,UAAKA,OAAO,CAACC,UAAR,GAAqB,GAArB,GAA2BD,OAAO,CAACE;MAAxC;QAAA;QAAA;QAAA;MAAA;IADJ,GAAUF,OAAO,CAACG,EAAlB;MAAA;MAAA;MAAA;IAAA,QADgB;EADxB;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAXD;;KAAMP,Q;AAaN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}